name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install poetry
      uses: snok/install-poetry@v1
      with:
        version: 'latest'
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      run: |
        poetry install --with dev
    - name: Run isort
      run: |
        poetry run isort . --check-only --diff
      continue-on-error: false

    - name: Run black
      run: |
        poetry run black . --check --diff
      continue-on-error: false

    - name: Run flake8
      run: |
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
      continue-on-error: false

    - name: Run MyPy
      run: |
        poetry run mypy
      continue-on-error: false
